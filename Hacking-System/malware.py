import socket
import platform
import psutil
import time
import locale
import re
import uuid

server_host = 'localhost'
server_port = 12345

def get_system_info():
    system_info = {}
    system_info['Host Name'] = socket.gethostname()
    system_info['OS Name'] = platform.system()
    system_info['OS Version'] = platform.release()
    system_info['OS Configuration'] = platform.machine()
    system_info['System Boot Time'] = str(psutil.boot_time()) + 's'
    system_info['Processor(s)'] = platform.processor()
    system_info['System Locale'] = '{}({})'.format(locale.getdefaultlocale()[0], locale.getdefaultlocale()[1])
    system_info['Time Zone'] = time.tzname[0]
    system_info['Virtual Memory: Max Size'] = str(round(psutil.virtual_memory().total / (1024.0 ** 3), 4)) + " GB"
    system_info['Virtual Memory: Available'] = str(round(psutil.virtual_memory().available / (1024.0 ** 3), 4)) + " GB"
    system_info['Virtual Memory: In Use'] = str(round(psutil.virtual_memory().total / (1024.0 ** 3), 4) - round(psutil.virtual_memory().available / (1024.0 ** 3), 4)) + " GB"
    system_info['OS Architecture'] = platform.machine()
    system_info['Mac Address'] = ':'.join(re.findall('..', '%012x' % uuid.getnode()))
    system_info['RAM'] = str(round(psutil.virtual_memory().total / (1024.0 ** 3))) + " GB"

    return system_info

with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
    s.connect((server_host, server_port))
    print('Connected with server')
    while True:
        data = s.recv(1024).decode()
        if data == 'sysinfo':
            system_info = get_system_info()
            res = ''
            for info in system_info.keys():
                res += '{}: {}\n'.format(info, system_info[info])
            s.sendall(res.encode())
        elif data == 'exit':
            print('Bye')
            break